import aiohttp
import ssl
import certifi
from bs4 import BeautifulSoup
from config import URL

last_news_title = None  # –ü–µ—Ä–µ–º–µ–Ω–Ω–∞—è –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –ø–æ—Å–ª–µ–¥–Ω–µ–π –Ω–æ–≤–æ—Å—Ç–∏

async def fetch_news():
    """–ó–∞–ø—Ä–∞—à–∏–≤–∞–µ—Ç —Å—Ç—Ä–∞–Ω–∏—Ü—É –∏ –ø–∞—Ä—Å–∏—Ç –ø–æ—Å–ª–µ–¥–Ω—é—é –Ω–æ–≤–æ—Å—Ç—å"""
    global last_news_title

    ssl_context = ssl.create_default_context(cafile=certifi.where())  # –£—Å—Ç—Ä–∞–Ω–µ–Ω–∏–µ –æ—à–∏–±–∫–∏ SSL

    async with aiohttp.ClientSession() as session:
        async with session.get(URL, ssl=ssl_context) as response:
            html = await response.text()

    soup = BeautifulSoup(html, "html.parser")
    news_blocks = soup.find_all("div", class_="d-flex py-4 align-items-start align-items-md-baseline mt-4")

    if not news_blocks:
        return None  # –ï—Å–ª–∏ –Ω–æ–≤–æ—Å—Ç–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã

    latest_news = news_blocks[0]  # –ë–µ—Ä—ë–º –ø–µ—Ä–≤—É—é –Ω–æ–≤–æ—Å—Ç—å
    title = latest_news.find("h3").text.strip()

    if title == last_news_title:  # –ï—Å–ª–∏ –Ω–æ–≤–æ—Å—Ç—å —É–∂–µ –±—ã–ª–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞
        return None

    last_news_title = title  # –û–±–Ω–æ–≤–ª—è–µ–º –ø–æ—Å–ª–µ–¥–Ω—é—é –Ω–æ–≤–æ—Å—Ç—å

    # –°–æ–±–∏—Ä–∞–µ–º –≤–µ—Å—å —Ç–µ–∫—Å—Ç –º–µ–∂–¥—É —ç—Ç–æ–π –∏ —Å–ª–µ–¥—É—é—â–µ–π –Ω–æ–≤–æ—Å—Ç—å—é
    news_text = []
    for element in latest_news.find_next_siblings():
        if element.name == "div":  # –ï—Å–ª–∏ —Å–ª–µ–¥—É—é—â–∏–π –∑–∞–≥–æ–ª–æ–≤–æ–∫ h3 ‚Äî –æ—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º—Å—è
            break
        news_text.append(element.text.strip())

    return f"üÜï *{title}*\n\n" + "\n".join(news_text)
